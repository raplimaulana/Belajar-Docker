### LOGGING DRIVER ###
Docker includes multiple logging mechanisms to help you get information from running containers and services. These mechanisms are called logging drivers. 
Each Docker daemon has a default logging driver, which each container uses unless you configure it to use a different logging driver, or “log-driver” for short.

As a default, Docker uses the json-file logging driver, which caches container logs as JSON internally. 
In addition to using the logging drivers included with Docker, you can also implement and use logging driver plugins.

Tip: use the “local” logging driver to prevent disk-exhaustion

By default, no log-rotation is performed. As a result, log-files stored by the default json-file logging driver logging driver can cause a significant amount of disk space to be used for containers that generate much output, which can lead to disk space exhaustion.
For other situations, the “local” logging driver is recommended as it performs log-rotation by default, and uses a more efficient file format. 


##Configure the default logging driver
------------|--------------------------------------------------------------------------------------------------------|
   DRIVER   |              DESCRIPTION                                                                                | 
------------|---------------------------------------------------------------------------------------------------------|
none        | No logs are available for the container and docker logs does not return any output.                     |
------------|---------------------------------------------------------------------------------------------------------|
local       | Logs are stored in a custom format designed for minimal overhead.                                       |
------------|---------------------------------------------------------------------------------------------------------|
json-file   | The logs are formatted as JSON. The default logging driver for Docker.                                  |
------------|---------------------------------------------------------------------------------------------------------|
syslog      | Writes logging messages to the syslog facility. The syslog daemon must be running on the host machine.  |
------------|---------------------------------------------------------------------------------------------------------|
journald    | Writes log messages to journald. The journald daemon must be running on the host machine.               |
------------|---------------------------------------------------------------------------------------------------------|
gelf        | Writes log messages to a Graylog Extended Log Format (GELF) endpoint such as Graylog or Logstash.       |
------------|---------------------------------------------------------------------------------------------------------|
fluentd     | Writes log messages to fluentd (forward input). The fluentd daemon must be running on the host machine. |
------------|---------------------------------------------------------------------------------------------------------|
awslogs     | Writes log messages to Amazon CloudWatch Logs.                                                          |
------------|---------------------------------------------------------------------------------------------------------|
splunk      | Writes log messages to splunk using the HTTP Event Collector.                                           |
------------|---------------------------------------------------------------------------------------------------------|
etwlogs     | Writes log messages as Event Tracing for Windows (ETW) events. Only available on Windows platforms.     |
------------|---------------------------------------------------------------------------------------------------------|
gcplogs     | Writes log messages to Google Cloud Platform (GCP) Logging.                                             |
------------|---------------------------------------------------------------------------------------------------------|
logentries  | Writes log messages to Rapid7 Logentries.                                                               |
------------|---------------------------------------------------------------------------------------------------------|

1. To configure the Docker daemon to default to a specific logging driver, set the value of log-driver to the name of the logging driver in the daemon.json configuration file. 

   {
      "log-driver": "local"
   }

   *The following example sets the default logging driver to the local log driver

2. If the logging driver has configurable options, we can set them in the daemon.json file as a JSON object with the key log-opts. 
   
   {
      "log-driver": "json-file",
      "log-opts": {
         "max-size": "10m",
         "max-file": "100",
         "labels": "production_status",
         #"env": "os,customer"
       }
   }

   *The following example sets two configurable options on the json-file logging driver

3. Restart Daemon dan Docker.
   sudo systemctl daemon-reload
   sudo systemctl restart docker 

4. Configure the logging driver for a container.
   Changing the default logging driver or logging driver options in the daemon configuration only affects containers that are created after the configuration is changed. 
   Existing containers retain the logging driver options that were used when they were created. 
   To update the logging driver for a container, the container has to be re-created with the desired options. Refer to the configure the logging driver for a container section below to learn how to find the logging-driver configuration of a container.

   docker run -it --log-driver none alpine ash
   docker run --log-driver json-file --log-opt max-size=10m training.btech.id/btacademy/alpine echo hello world   

5. Check the logs in the docker directory.
   sudo cat /var/lib/docker/containers/CONTAINER/xxx-json.log

   *Note: The ID can be seen from the docker ps -a command.